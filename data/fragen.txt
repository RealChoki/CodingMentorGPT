Woche 2: Grundlagen der Datentypen und Escape-Sequenzen


Themen: Escape-Sequenzen, Arten von Datentypen, Variablen, Datentypumwandlung, Umrechnung von Zahlenarten, Kodierung im Zweierkomplement, Arithmetische und logische Ausdrücke, Literale, Konstanten, Zuweisungsoperatoren, Java-Grundlagen und Programmstruktur.


Fragen:


Java-Grundlagen und Programmstruktur:

„Was ist die Struktur einer einfachen Java-Klasse?“

„Wie sieht der Aufbau einer main-Methode in Java aus?“

„Wie funktioniert der Java-Compiler und welche Rolle spielt die JVM?“

„Was bedeutet es, dass Java eine streng typisierte Sprache ist?“

„Wie helfen geschweifte Klammern ({}) bei der Strukturierung von Java-Programmen?“

„Erkläre die Unterschiede zwischen System.out.print und System.out.println und gib Beispiele, wann man diese verwendet.“

„Warum sind Semikolons am Ende von Statements in Java erforderlich?“

„Wie fügst du Kommentare in dein Java-Programm ein, und warum sind sie nützlich?“


Arten von Datentypen:

„Welche verschiedenen Datentypen gibt es in Java und wann verwendet man sie?“

„Erkläre den Unterschied zwischen primitiven und nicht-primitiven Datentypen.“

„Was sind die Wertebereiche von int, float und double in Java?“

„Nenne Beispiele für Referenzdatentypen und erkläre, wie sie sich von primitiven Typen unterscheiden.“


Variablen:

„Wie deklariert und initialisiert man eine Variable in Java?“

„Was sind die Regeln für die Benennung von Variablen in Java?“

„Welche Vorteile bietet die CamelCase-Namenskonvention in Java?“

„Wie unterscheidet sich die Deklaration von primitiven und nicht-primitiven Variablen?“

„Was bedeutet es, wenn eine Variable auf der linken oder rechten Seite einer Zuweisung steht? Erkläre dies anhand des Beispiels var1 = 15; und var2 = var1;.”

„Wie funktioniert die Wertzuweisung bei bereits definierten Variablen in Java? Gib ein kurzes Beispiel.“


Escape-Sequenzen erklären und anwenden:

„Kannst du mir erklären, was Escape-Sequenzen sind und wie sie in Java verwendet werden?“

„Zeige mir ein Beispiel, wie man Anführungszeichen innerhalb eines Strings darstellt.“

„Wann würdest du die Escape-Sequenz \t in einem Java-Programm verwenden?“

„Welche Escape-Sequenz wird verwendet, um einen Backslash in einem String darzustellen?“

„Gib ein Beispiel für eine Zeichenkette, die sowohl Anführungszeichen als auch einen Zeilenumbruch enthält.“


Arithmetische und logische Ausdrücke:

„Welche arithmetischen Operatoren gibt es in Java und wofür werden sie verwendet?“

„Was sind logische Operatoren in Java und wie funktionieren sie?“

„Erkläre den Unterschied zwischen Präfix- und Postfix-Inkrement/Dekrement und gib Beispiele.“

„Wie wird der Modulo-Operator verwendet und wann ist er nützlich?“


Zuweisungsoperatoren:

„Wie funktionieren verkürzte Zuweisungsoperatoren wie += oder -= in Java?“

„Was passiert, wenn man eine Variable mit einem Zuweisungsoperator verändert?“

„Gib ein Beispiel, wie x %= 3 funktioniert und was der endgültige Wert von x ist, wenn x = 10.“


Datentypumwandlung (Type Casting):

„Wie konvertiert man einen String in einen Integer in Java?“

„Gib ein Beispiel für die Umwandlung eines Integers in einen Double.“

„Was ist der Unterschied zwischen explizitem und implizitem Type Casting?“

„Erkläre die Funktionsweise der Methode Integer.parseInt() und gib ein Beispiel.“


Literale und Konstanten:

„Was sind numerische Literale in Java?“

„Wie definiert man eine Konstante in Java?“

„Warum ist es wichtig, Konstanten mit final zu definieren?“

„Nenne die Konventionen für die Benennung von Konstanten und gib ein Beispiel.“


Umrechnung von Zahlenarten:

„Wie wandelt man eine Dezimalzahl in eine Binärzahl um?“

„Schreibe ein Programm, das eine Zahl von Celsius in Fahrenheit umrechnet.“

„Wie konvertierst du eine Binärzahl zurück in eine Dezimalzahl?“

„Gibt es Unterschiede bei der Umwandlung zwischen Dezimal- und Hexadezimalzahlen in Java?“


Kodierung im Zweierkomplement:

„Wie funktioniert die Kodierung im Zweierkomplement?“

„Erkläre, wie negative Zahlen im Zweierkomplement dargestellt werden.“

„Warum wird das Zweierkomplement zur Darstellung von negativen Zahlen verwendet?“

„Gib ein Beispiel für die Berechnung des Zweierkomplements einer negativen Zahl.“



Woche 3: Strings, Scanner und Static in Java


Themen: Strings und deren Verwendung, Vergleich von Strings, String-Operationen, String-Konkatenation, Eingabe von Daten mit dem Scanner, Methoden der Scanner-Klasse


Fragen:


Strings und deren Verwendung:

„Was sind Strings und wie kann man sie in Java verwenden?“

„Warum sind Strings in Java immutable (unveränderlich) und wie wirkt sich das auf die String-Operationen aus?“

„Zeige, wie man Strings mit dem +=-Operator zusammenfügt.“

„Warum ist die Reihenfolge der Operanden beim Verwenden des +-Operators wichtig? Zeige ein Beispiel.“

„Zeige mir, wie man zwei Strings in Java miteinander vergleicht und dabei Groß- und Kleinschreibung ignoriert.“


String-Operationen:

„Wie kannst du die Länge eines Strings in Java ermitteln?“

„Zeige ein Beispiel, wie du das erste und letzte Zeichen eines Strings ausgibst.“

„Erkläre den Unterschied zwischen substring() und charAt() in Java.“

„Wie entfernst du führende und nachgestellte Leerzeichen aus einem String?“

„Erkläre die Verwendung der Methode replace() und wie man damit Zeichen oder Substrings innerhalb eines Strings austauscht.“

„Welche Ausgabe erhältst du, wenn du den Ausdruck System.out.println("1" + 2 + 0); mit unterschiedlichen Klammerungen schreibst? z.B. System.out.println("1" + (2 + 0);.“


Vergleich von Strings:

„Erkläre den Unterschied zwischen dem Vergleich von Strings mit == und .equals().“

„Schreibe ein Programm, das zwei Strings einliest und überprüft, ob sie gleich sind.“

„Erkläre den Unterschied zwischen equals() und equalsIgnoreCase() beim Vergleich von Strings.“

„Warum ist es wichtig, beim Vergleich von Strings nicht == zu verwenden?“

„Was passiert, wenn du versuchst, einen null-String mit .equals() zu vergleichen?“


Eingabe von Daten mit dem Scanner:

„Wie verwendet man das Scanner-Objekt in Java, um Benutzereingaben zu lesen?“

„Gib ein Beispiel, wie man eine Zahl vom Benutzer einliest und sie dann verdoppelt.“

„Wie liest man einen Textstring ein und gibt ihn in Großbuchstaben aus?“

„Zeige mir, wie du mehrere Benutzereingaben (eine Zahl und einen Text) mit dem Scanner verarbeiten würdest.“

„Was passiert, wenn du einen falschen Datentyp über Scanner.nextInt() einliest? Wie kannst du sicherstellen, dass nur gültige Eingaben gemacht werden?“


Modulo-Operationen:

„Wie funktioniert die Modulo-Operation und wann verwendet man sie?“

„Zeige mir Beispiele für die Verwendung der Modulo-Operation in Java.“

„Kannst du erklären, wann der Modulo-Operator besonders nützlich ist, z.B. für das Prüfen von geraden und ungeraden Zahlen?“

„Wie könnte der Modulo-Operator verwendet werden, um zyklische Prozesse zu implementieren, z.B. in einem Kalender?“



Woche 4: Kontrollstrukturen und Schleifen in Java


Themen: Schleifen, If/Else-Bedingungen, Kontrollstrukturen, Sequenzen


Fragen:


Sequenzen:

„Was sind Sequenzen in der Programmierung und wie verwendet man sie?“

„Gib Beispiele für die Verwendung von Sequenzen in Java.“

„Wie wirkt sich die Reihenfolge der Anweisungen in einer Sequenz auf die Ausführung des Programms aus?“


If/Else-Bedingungen:

„Gib Beispiele für die Verwendung von if/else-Bedingungen in einem Java-Programm.“

„Erkläre, wie man verschachtelte if/else-Bedingungen verwendet und wann dies sinnvoll ist.“

„Was ist der Unterschied zwischen if/else und dem ternären Operator in Java? Wann sollte man den ternären Operator verwenden?“


Schleifen:

„Wie verwendet man for-, erweiterte for-, while- und do-while-Schleifen in Java?“

„Schreibe ein Programm, das die Fibonacci-Zahlenreihe mit einer Schleife berechnet.“

„Erkläre die Unterschiede zwischen for, while und do-while Schleifen. Wann sollte man jede von ihnen verwenden?“

„Gib ein Beispiel für eine verschachtelte Schleife und erkläre ihren Zweck.“


Kontrollstrukturen:

„Was sind Kontrollstrukturen und wie werden sie in Java verwendet?“

„Erkläre die Bedeutung und Verwendung von switch-Anweisungen in Java.“

„Wie kann der break-Befehl in Schleifen oder switch-Anweisungen verwendet werden?“

„Was bewirkt der continue-Befehl in einer Schleife? Gib ein Beispiel für dessen Verwendung.“



Woche 5: Methoden und Javadoc in Java


Themen: Methoden, Javadoc-Kommentare, Parameter, Sichtbarkeit, Ternärer Operator


Fragen:


Methoden:

„Was ist eine Methode in Java und welche Rolle spielt sie in der Programmierung?“

„Wie definiert man eine Methode mit und ohne Parameter in Java?“

„Erkläre den Unterschied zwischen einer Methode, die void zurückgibt, und einer Methode, die einen Wert zurückgibt. Gib Beispiele für beide.“

„Wie funktioniert ein Methodenaufruf in Java? Erkläre anhand eines Beispiels.“


Parameter:

„Was sind Parameter in Java und wie werden sie in Methoden verwendet?“

„Erkläre den Unterschied zwischen formalen und tatsächlichen Parametern. Gib ein Beispiel, das beides illustriert.“

„Wie wird die Reihenfolge der Parameter beim Methodenaufruf berücksichtigt? Zeige dies anhand eines Beispiels.“

„Erstelle eine Methode, die zwei Parameter entgegennimmt und einen Wert basierend auf diesen Parametern zurückgibt.“


Sichtbarkeit:

„Was bedeuten die Sichtbarkeitsmodifikatoren public, private und protected in Java?“

„Wie beeinflusst die Sichtbarkeit den Zugriff auf Klassen und Methoden?”


Javadoc-Kommentare:

„Was ist Javadoc und warum ist es wichtig, Code zu dokumentieren?“

„Wie erstellt man Javadoc-Kommentare für eine Methode? Gib ein Beispiel für die Kommentierung einer Methode mit Javadoc.“

„Erkläre die verschiedenen Tags, die in Javadoc verwendet werden, wie @param, @return, @see, und @exception. Gib Beispiele für deren Verwendung.“


Logische Ausdrücke:

„Welche logischen Ausdrücke und Operatoren gibt es in Java? Erkläre, wie sie in Bedingungen verwendet werden.“

„Gib Beispiele für die Verwendung von logischen Operatoren wie &&, || und ! in if-Bedingungen.“


Ternärer Operator:

„Was ist der ternäre Operator in Java und wie wird er verwendet? Gib ein Beispiel, wie man den ternären Operator einsetzt, um eine if-else-Bedingung zu ersetzen.“

„Erkläre die Syntax des ternären Operators und zeige, wie er verwendet wird, um einfache Entscheidungen zu treffen.“



Woche 6: Arrays in Java


Themen: Arrays, mehrdimensionale Arrays, Initialisierung, Iteration


Fragen:


Was ist ein Array?

„Was ist ein Array in Java und welche Vorteile bietet die Verwendung von Arrays?“

„Erkläre, warum Arrays für bestimmte Programmieraufgaben nützlich sind.“


Deklaration und initialisierung von Arrays:

„Wie deklariert man ein Array in Java? Zeige die Syntax für die Deklaration an.“

„Wie initialisiert man ein Array mit Werten in Java? Zeige dies anhand eines Beispiels.“

„Wie initialisiert man ein Array ohne direkte Zuweisung, sondern nur mit new? Gib ein Beispiel.“


Arbeiten mit Arrays:

„Wie greift man auf Array-Elemente zu, und wie werden diese über Indizes angesprochen? Erkläre mit einem Beispiel.“

„Zeige, wie man Array-Elemente liest und schreibt. Gib Beispiele für das Ändern von Werten in einem Array.“

„Wie greift man auf die Länge eines Arrays in Java zu? Zeige anhand eines Beispiels, wie man die Länge eines Arrays ermittelt.“

„Was ist eine ArrayIndexOutOfBoundsException, gib ein Beispiel für die Entstehung.”


Iteration durch Arrays:

„Wie verwendet man eine for-Schleife, um durch ein Array zu iterieren? Zeige ein Beispiel.“

„Was ist die erweiterte for-Schleife (for-each-Schleife) und wie wird sie zur Iteration durch Arrays verwendet? Gib ein Beispiel.“

„Vergleiche die traditionelle for-Schleife und die erweiterte for-Schleife. Wann ist es sinnvoll, welche Schleife zu verwenden?“


Was ist ein mehrdimensionales Array?

„Was sind mehrdimensionale Arrays und wie unterscheiden sie sich von eindimensionalen Arrays?“

„Erkläre, warum mehrdimensionale Arrays für bestimmte Programmieraufgaben nützlich sind.“

Deklaration und initialisierung von mehrdimensionalen Arrays:

„Wie deklariert man ein mehrdimensionales Array in Java? Zeige die Syntax für die Deklaration an.“

„Wie initialisiert man ein zweidimensionales Array? Gib ein Beispiel für die Initialisierung eines solchen Arrays.“


Arbeiten mit mehrdimensionalen Arrays:

„Wie greift man auf mehrdimensionale Array-Elemente zu, und wie werden diese über Indizes angesprochen? Erkläre mit einem Beispiel.“

„Zeige, wie man mehrdimensionale Array-Elemente liest und schreibt. Gib Beispiele für das Ändern von Werten in einem Array.“

„Wie greift man auf die Länge eines mehrdimensionalen Arrays zu? Zeige anhand eines Beispiels, wie man die Anzahl der inneren Arrays und die Anzahl der Elemente in einem inneren Array abfragt.“


Durch Iteration über mehrdimensionale Arrays:

„Wie kann man durch ein zweidimensionales Array mit verschachtelten Schleifen iterieren? Zeige ein Beispiel.“

„Wie verwendet man die erweiterte for-Schleife, um durch ein zweidimensionales Array zu iterieren? Gib ein Beispiel.“


Praktische Anwendungen von Arrays:

„Nenne typische Anwendungsfälle für Arrays in Programmen und erkläre, warum sie dort vorteilhaft sind.“

„Was sind die Grenzen von Arrays?“



Woche 9: Klassen und Objekte in Java


Themen: Klassen, Objekte, Attribute, Methoden, Datenkapselung, Konstruktoren, this-Schlüsselwort, Getter/Setter, Referenzdatentypen


Fragen:


Klassen und Objekten:

„Was sind Klassen in Java und welche Rolle spielen sie bei der Erstellung von Objekten?“

„Wie unterscheiden sich Klassen von Objekten in Java? Erkläre die Beziehung zwischen ihnen.“


„Gib ein Beispiel für eine einfache Klasse und ein Objekt, das auf dieser Klasse basiert.“

Attribute und Methoden in Java:

„Was sind Attribute in einer Java-Klasse und welcher zusammenhang haben sie mit Objekte?“

„Was sind Methoden in einer Java-Klasse und welcher zusammenhang haben sie mit Objekte?“


Datenkapselung (Encapsulation):

„Was ist Datenkapselung in Java und wie wird sie durch private Attribute und öffentliche Methoden erreicht?“

„Erkläre, warum Datenkapselung wichtig ist und wie sie den Zugriff auf die Daten eines Objekts einschränkt.“


Konstruktoren:

„Was ist ein Konstruktor in Java und wie unterscheidet er sich von normalen Methoden?“

„Wie definiert man einen Konstruktor mit Parametern und wie wird er verwendet, um ein Objekt zu initialisieren?“

„Was ist der Unterschied zwischen einem default-Konstruktor und einem benutzerdefinierten Konstruktor? Zeige dies anhand von Beispielen.“

„In der Klasse Auto, was ist der Unterschied zwischen dem ersten Auto und dem zweiten Auto() in der Anweisung Auto bmw = new Auto() bei der Objekterstellung?“


Getter und Setter:

„Was sind Getter- und Setter-Methoden und warum sind sie wichtig für die Datenkapselung?“

„Wie benennt man Getter- und Setter-Methoden nach Konvention und wie werden sie implementiert?“

„Erstelle ein Beispiel einer Klasse mit privaten Attributen und entsprechenden Getter- und Setter-Methoden.“


This-Schlüsselwort:

„Wie wird das this-Schlüsselwort in Java verwendet, um auf Instanzvariablen innerhalb einer Klasse zuzugreifen?“

„Gib ein Beispiel, bei dem das this-Schlüsselwort verwendet wird, um Namenskonflikte zwischen Attributen und Methodenparametern zu vermeiden.“

„Erkläre, warum this-Verweise innerhalb von Konstruktoren und Methoden nützlich sind.“


Referenzdatentypen:

„Wie funktionieren Referenzdatentypen in Java, und was passiert, wenn man eine Referenzvariable kopiert?“

„Erkläre, wie Änderungen an einer Referenzvariable das ursprüngliche Objekt beeinflussen können.“

„Gib ein Beispiel, das zeigt, wie Referenzdatentypen in Java verwendet werden und wie sie sich von primitiven Datentypen unterscheiden.“



Woche 10: Vererbung, Überschreiben, static-Schlüsselwort und Projektstrukturierung


Themen: Vererbung, Überschreiben, static-Schlüsselwort, Strukturierung von Java-Projekten


Fragen:


Vererbung:

„Was ist Vererbung in der Programmierung und wie wird sie in Java umgesetzt?“

„Erkläre den Unterschied zwischen Eltern- und Kindklassen in Bezug auf Vererbung. Wie wird die Vererbung durch das extends-Keyword implementiert?“

„Wie funktioniert das Vererben von Methoden und Konstruktoren?“

„Wie ruft man den Konstruktor einer Oberklasse in einer Unterklasse auf? Zeige ein Beispiel mit dem super(<Parameter>)-Aufruf.“

„Erstelle ein Beispiel für Vererbung, indem du Klassen wie Vehicle, Car und MotorBike verwendest, und zeige, wie Vererbung zwischen diesen Klassen funktioniert.“


Überschreiben und Überladen:

„Was ist eine Methoden-Signatur und welche Elemente gehören dazu?“

„Was bedeutet Methodenüberschreibung in Java, welche Bedingungen müssen erfüllt sein, und wie hängt die Methoden-Signatur mit der @Override-Annotation zusammen?“

„Was ist der Unterschied zwischen Methodenüberschreibung und Methodenüberladung? Wie wird die Methoden-Signatur bei der Implementierung von Methodenüberladung berücksichtigt?“


Das Schlüsselwort static:

„Was sind die Unterschiede zwischen Klassen- und Objekteigenschaften in Java? Wie werden Klassenmethoden und -variablen definiert und verwendet?“

„Wie greift man auf statische Mitglieder einer Klasse zu? Was sind die Vorteile und Nachteile der Verwendung von static-Mitgliedern?“

„Gib Beispiele für die Verwendung des static-Schlüsselworts in Methoden und Variablen und erkläre den Unterschied zwischen statischen und nicht-statischen Mitgliedern.“

Strukturierung von Java-Projekten:

„Was sind Packages in Java, und warum sind sie wichtig für die Strukturierung von Projekten? Wie werden sie verwendet und organisiert?“

„Wie importiert man Klassen aus verschiedenen Packages? Welche Rolle spielt das import-Keyword in diesem Zusammenhang?“